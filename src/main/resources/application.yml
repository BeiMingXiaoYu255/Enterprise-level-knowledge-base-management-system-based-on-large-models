java: -Dhttp.proxyHost=proxy.example.com -Dhttp.proxyPort=8080 \
  -Dhttps.proxyHost=proxy.example.com -Dhttps.proxyPort=8080 \
  -jar your-application.jar

logging:
  level:
    root: INFO
    com.example.demo.mapper: DEBUG
    org.springframework.mail: DEBUG
    dev.langchain4j: DEBUG

server:
  port: 8000

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/klbwebsystem?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: 2550505
    driver-class-name: com.mysql.cj.jdbc.Driver
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  mail:
    host: smtp.qq.com
    port: 465
    username: q15068673111@sina.cn
    password: ad43435afec91223
    properties:
      mail:
        debug: true
        smtp:
          auth: true
          ssl:
            enable: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            port: 465
  data:
    redis:
      host: localhost
      port: 6379

klb:
  storage:
    path: D:\KLB\
mybatis:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

langchain4j:
  open-ai:
    chat-model:
      base-url: https://dashscope.aliyuncs.com/compatible-mode/v1
      api-key: ${API-KEY:sk-948f9c0c86cc44438afc6c0bfb2f19ab}
      model-name: qwen-plus
      log-requests: true
      log-responses: true
    streaming-chat-model: #流式回答方法
      base-url: https://dashscope.aliyuncs.com/compatible-mode/v1
      api-key: ${API-KEY:sk-948f9c0c86cc44438afc6c0bfb2f19ab}
      model-name: qwen-plus
      log-requests: true
      log-responses: true
    embedding-model:
      base-url: https://dashscope.aliyuncs.com/compatible-mode/v1
      api-key: ${API-KEY:sk-948f9c0c86cc44438afc6c0bfb2f19ab}
      model-name: text-embedding-v3
      log-requests: true
      log-responses: true


